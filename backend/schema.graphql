schema {
  query: Query
  mutation: Mutation
}

type Users {
  id: ID!
  login: String!
  email: String!
  password: String!
  phone: String
  highlights: [Highlights]!
  collections: [Collections!]!
  words: [Words!]!
  tests: [Tests!]!
  achievements: [Achievements!]!
  language: String!
  theme: String!
  openedBooks: [Books!]!
  type: String
}

type Books {
  id: ID!
  title: String!
  author: String
  document: String!
  image: String
  highlights: [Highlights!]!
  collections: [BooksOnCollections!]!
  uploaded: String!
  user: Users!
}

type Achievements {
  id: ID!
  name: String!
  description: String!
  users: [Users!]
}

type Rects {
  id: ID
  pagenum: Int
  x1: Float
  y1: Float
  x2: Float
  y2: Float
  width: Float
  height: Float
  scaleFactor: Float
  highlightbr: [Highlights]
  highlightrects: [RectsOnHighlights]
}

type Collections {
  id: ID!
  title: String!
  user: Users!
  books: [BooksOnCollections!]!
  tests: [TestsOnCollections!]!
}

type RectsOnHighlights {
  rects: Rects
  rectid: Int
  highlights: Highlights
  highlightid: Int
}

type TestsOnCollections {
  tests: Tests
  testid: Int
  collections: Collections
  collectionid: Int
  position: Int
}

type BooksOnCollections {
  books: Books
  bookid: Int
  collections: Collections
  collectionid: Int
  position: Int
}

type Highlights {
  id: ID!
  book: Books!
  user: Users!
  boundingRect: Rects
  rects: [RectsOnHighlights]
  title: String
  text: String
  color: String!
  image: String
  width: Int
  height: Int
  emoji: String
  scaleFactor: Float!
}

type Words {
  id: ID!
  color: String!
  word: String!
  description: String
  translation: String
  user: Users!
  test: Tests!
}

type Tests {
  id: ID!
  title: String!
  prompt: String!
  questionCount: Int!
  lastResult: Int
  language: String!
  difficulty: String!
  user: Users!
  questions: [Questions!]!
  collections: [TestsOnCollections!]!
  result: Int
  book: Books
}

type Questions {
  id: ID!
  test: Tests!
  questionText: String!
  number: Int!
  type: String!
  answers: String
  correct: String!
  explanation: String
}

type Query {
  Books(id: Int title: String author: String, user: Int): [Books]
  Highlights(id: Int, book: Int, user: Int): [Highlights]
  Collections(id: Int, title: String, user: Int): [Collections]
  Rects(id: Int, x1: Int, x2: Int, y1: Int, y2: Int, width: Int, height: Int, pagenum: Int, scaleFactor: Float): [Rects]
  Users(id: Int, login: String, password: String, email: String, phone: String): [Users]
  Achievements(id: Int, name: String, users: Int): [Achievements]
  Tests(id: Int, user: Int, title: String): [Tests]
  Words(id: Int, color: String, word: String, user: Int): [Words]
  Questions(id: Int, test: Int, user: Int): [Questions]
}

input iAchievements {
  id: ID
  name: String
  description: String
}
input iRects {
  id: ID
  pagenum: Int
  x1: Float
  y1: Float
  x2: Float
  y2: Float
  width: Float
  height: Float
  scaleFactor: Float
}

type Mutation {
  setBook(
    id: Int
    title: String
    author: String
    document: String
    image: String
    highlights: [Int]
    collections: [Int]
    user: Int!
  ): Books
  setUser(
    id: ID
    login: String
    email: String
    password: String
    phone: String
    language: String
    theme: String
    achievements: [iAchievements]
    openedBooks: [Int]
    type: String
  ): Users
  setAchievement(
    id: ID
    name: String
    description: String
    user: Int
  ): Achievements
  setRect(
    id: ID
    pagenum: Int
    x1: Int
    y1: Int
    x2: Int
    y2: Int
    width: Int
    height: Int
    scaleFactor: Float
  ): Rects
  setCollection(
    id: ID
    title: String
    user: Int
    books: Int
    tests: Int
  ): Collections
  setHighlight(
    id: ID
    book: Int
    user: Int
    boundingRect: iRects
    rects: [iRects]
    title: String
    text: String
    color: String
    image: String
    width: Int
    height: Int
    emoji: String
  ): Highlights
  setWord(
    id: ID
    color: String
    word: String
    description: String
    translation: String
    user: Int
    test: Int
  ): Words
  setTest(
    id: ID
    title: String
    prompt: String
    language: String
    difficulty: String
    questionCount: Int
    lastResult: Int
    user: Int
    book: Int
  ): Tests
  setQuestion(
    id: ID
    test: Int
    number: Int
    questionText: String
    type: String
    answers: String
    correct: String
    explanation: String
  ): Questions

  delUser(id: Int!): Users
  delBook(id: Int!): Books
  delAchievement(id: Int!): Achievements
  delRect(id: Int!): Rects
  delCollection(id: Int!): Collections
  delHighlight(id: Int!): Highlights
  delWord(id: Int!): Words
  delTest(id: Int!): Tests
  delQuestion(id: Int!): Questions

  unlinkTest(collectionid: Int! testid: Int!): Int
  unlinkBook(collectionid: Int! bookid: Int!): Int
}
